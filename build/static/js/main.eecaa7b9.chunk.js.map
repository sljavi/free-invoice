{"version":3,"sources":["printer.svg","save.svg","GenerateRows.js","Table.js","FromTo.js","Invoice.js","App.js","index.js"],"names":["module","exports","GenerateRows","getTemplate","localStorage","getItem","getTime","getPrice","price","parseFloat","isNaN","getFrom","from","Date","now","getTo","to","getWeekends","state","template","time","weekends","canGenerateRows","moment","diff","generateRows","difference","rows","Array","map","nothing","index","day","add","name","format","replace","key","filter","row","props","onGenerateRows","hideGenerateRowsModal","updateFrom","event","target","value","setState","setItem","onUpdateState","updateTo","updateTemplate","templateStart","indexOf","templateEnd","slice","onUpdatePrice","changeWeekends","checked","className","onClick","this","type","onChange","disabled","React","PureComponent","Table","getRowList","JSON","parse","err","console","error","showGenerateRowsModal","onChangeRowName","aKey","currentTarget","textContent","updateRows","onChangeRowPrice","getRows","contentEditable","onBlur","e","removeRow","addRow","getTotal","reduce","count","removeRows","toggleGenerateRowsModal","stringify","length","FromTo","fromName","fromAddress","fromTelephone","fromEmail","toName","toAddress","toTelephone","toEmail","updateState","Invoice","getInvoiceNumber","document","title","date","dueDate","number","updateNumber","onChangeDate","getDueDate","set30days","updateDueDate","increaseInvoiceNumber","text","Number","incrementedNumber","updatedText","App","saved","updateTitle","setTimeout","src","printer","window","print","alt","save","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.eecaa7b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/printer.42497fb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.1731195f.svg\";","import React from 'react';\nimport moment from 'moment';\n\nimport './GenerateRows.css';\n\nclass GenerateRows extends React.PureComponent {\n\n  getTemplate = () => {\n    if (localStorage.getItem('template')) {\n      return localStorage.getItem('template');\n    }\n    return '{{MMM D, YYYY}} - Daily work';\n  }\n\n  getTime = () => {\n    if (localStorage.getItem('time')) {\n      return localStorage.getItem('time');\n    }\n    return '{{MMM D, YYYY}}';\n  }\n\n  getPrice = () => {\n    if (localStorage.getItem('price')) {\n      const price = parseFloat(localStorage.getItem('price'));\n      if (!isNaN(price)) {\n        return price;\n      }\n    }\n    return 100;\n  }\n\n  getFrom = () => {\n    if (localStorage.getItem('from')) {\n      const from = +localStorage.getItem('from');\n      if (!isNaN(from)) {\n        return from;\n      }\n    }\n    return Date.now();\n  }\n\n  getTo = () => {\n    if (localStorage.getItem('to')) {\n      const to = +localStorage.getItem('to');\n      if (!isNaN(to)) {\n        return to;\n      }\n    }\n    return Date.now();\n  }\n\n  getWeekends = () => {\n    if (localStorage.getItem('weekends')) {\n      return localStorage.getItem('template') === 'true';\n    }\n    return true;\n  }\n\n  state = {\n    template: this.getTemplate(),\n    time: this.getTime(),\n    price: this.getPrice(),\n    from: this.getFrom(),\n    to: this.getTo(),\n    weekends: this.getWeekends()\n  }\n\n  canGenerateRows = () => {\n    const from = moment(this.state.from);\n    const to = moment(this.state.to);\n    const difference = to.diff(from, 'days');\n    return difference > 0;\n  }\n\n  generateRows = () => {\n    const from = moment(this.state.from);\n    const to = moment(this.state.to);\n    const difference = to.diff(from, 'days') + 1;\n    if (difference > 0) {\n      // eslint-disable-next-line\n      const rows = [...(new Array(difference))].map((nothing, index) => {\n        const day = moment(from).add(index, 'day');\n        if (!this.state.weekends || (this.state.weekends && day.day() >= 1 && day.day() <= 5)) {\n          let time = '';\n          let name = this.state.template;\n          if (this.state.time) {\n            time = day.format(this.state.time.replace('{{', '').replace('}}', ''));\n            name = this.state.template.replace(this.state.time, time);\n          }\n          return {\n            name,\n            price: this.state.price,\n            key: day.format('X')\n          }\n        }\n      }).filter(row => row);\n      this.props.onGenerateRows(rows);\n      this.props.hideGenerateRowsModal();\n    }\n  }\n\n  updateFrom = (event) => {\n    const from = new Date(event.target.value).getTime();\n    this.setState({from});\n    localStorage.setItem('from', from);\n    this.props.onUpdateState();\n  }\n\n  updateTo = (event) => {\n    const to = new Date(event.target.value).getTime()\n    this.setState({to});\n    localStorage.setItem('to', to);\n    this.props.onUpdateState();\n  }\n\n  updateTemplate = (event) => {\n    const template = event.target.value\n    const templateStart = template.indexOf('{{');\n    const templateEnd = template.indexOf('}}');\n    let time = '';\n    if (templateStart >= 0 && templateStart < templateEnd) {\n      time = template.slice(templateStart, templateEnd + 2);\n    }\n    this.setState({ template, time });\n    localStorage.setItem('template', template);\n    localStorage.setItem('time', time);\n    this.props.onUpdateState();\n  }\n\n  onUpdatePrice = (event) => {\n    const price = parseFloat(event.target.value);\n    this.setState({price});\n    localStorage.setItem('price', price);\n    this.props.onUpdateState();\n  }\n\n  changeWeekends = (event) => {\n    const weekends = event.target.checked;\n    this.setState({weekends});\n    localStorage.setItem('weekends', weekends);\n    this.props.onUpdateState();\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          className='generate-rows-outside'\n          onClick={this.props.hideGenerateRowsModal}\n        ></div>\n        <div className='generate-rows'>\n          <label>\n            <span>Template</span>\n            <input\n              type='text'\n              value={this.state.template}\n              onChange={this.updateTemplate}\n            />\n          </label>\n          <label>\n            <span>Amount</span>\n            <input\n              type='number'\n              value={this.state.price}\n              onChange={this.onUpdatePrice}\n            />\n          </label>\n          <label>\n            <span>From</span>\n            <input\n              type='date'\n              value={moment(this.state.from).format('YYYY-MM-DD')}\n              onChange={this.updateFrom}\n            />\n          </label>\n          <label>\n            <span>To</span>\n            <input\n              type='date'\n              value={moment(this.state.to).format('YYYY-MM-DD')}\n              onChange={this.updateTo}\n            />\n          </label>\n          <label>\n            <span>\n              <input\n                type='checkbox'\n                checked={this.state.weekends}\n                onChange={this.changeWeekends}\n              />\n            </span>\n            Exclude weekends\n          </label>\n          <p>\n            <button\n              onClick={this.generateRows}\n              disabled={!this.canGenerateRows()}\n            >\n              Generate\n            </button>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GenerateRows;\n","import React from 'react';\nimport GenerateRows from './GenerateRows';\n\nimport './Table.css';\n\nclass Table extends React.PureComponent {\n\n  getRowList = () => {\n    const rows = localStorage.getItem('rows');\n    if (rows) {\n      try {\n        return JSON.parse(rows);\n      } catch (err) {\n        console.error(err);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  state = {\n    rows: this.getRowList(),\n    showGenerateRowsModal: false\n  }\n\n  onChangeRowName = (event, aKey) => {\n    const rows = this.state.rows.map((row) => {\n      if (row.key === aKey) {\n        return {\n          ...row,\n          name: event.currentTarget.textContent\n        }\n      }\n      return row;\n    });\n    this.updateRows(rows);\n  }\n\n  onChangeRowPrice = (event, aKey) => {\n    const rows = this.state.rows.map((row) => {\n      if (row.key === aKey) {\n        return {\n          ...row,\n          price: parseFloat(event.currentTarget.textContent)\n        }\n      }\n      return row;\n    });\n    this.updateRows(rows);\n  }\n\n  getRows = () => {\n    return this.state.rows.map((row) => {\n      return (\n        <tr className={row.key}>\n          <td>\n            <span\n              contentEditable\n              onBlur={(e) => this.onChangeRowName(e, row.key)}\n            >{row.name}</span>\n            <div className='controls'>\n              <button\n                className='right'\n                onClick={() => this.removeRow(row.key)}>x</button>\n            </div>\n          </td>\n          <td>\n            $\n            <span\n              contentEditable\n              onBlur={(e) => this.onChangeRowPrice(e, row.key)}\n            >\n              {row.price}  \n            </span>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  addRow = () => {\n    const rows = [\n      ...this.state.rows,\n      {\n        name: 'Daily work',\n        price: 20,\n        key: Date.now()\n      }\n    ]\n    this.updateRows(rows);\n  }\n\n  getTotal = () => {\n    return this.state.rows.reduce((count, {price}) => count + price, 0);\n  }\n\n  removeRow = (aKey) => {\n    const rows = this.state.rows.filter(({key}) => aKey !== key);\n    this.updateRows(rows);\n  }\n\n  removeRows = () => {\n    this.updateRows([]);\n  }\n\n  toggleGenerateRowsModal = () => {\n    this.setState({\n      showGenerateRowsModal: !this.state.showGenerateRowsModal\n    });\n  }\n\n  hideGenerateRowsModal = () => {\n    this.setState({\n      showGenerateRowsModal: false\n    });\n  }\n\n  onGenerateRows = (rows) => {\n    this.updateRows([\n      ...this.state.rows,\n      ...rows\n    ]);\n  }\n\n  updateRows = (rows) => {\n    this.setState({ rows });\n    localStorage.setItem('rows', JSON.stringify(rows));\n    this.props.onUpdateState();\n  }\n\n  render() {\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.getRows()}\n          </tbody>\n        </table>\n        <div className='add-row-table-controls'>\n          <button\n            className='left'\n            onClick={this.addRow}>Add row</button>\n        </div>\n        <div className='generate-rows-table-controls'>\n          <button\n            className='left'\n            onClick={this.toggleGenerateRowsModal}\n          >\n            Generate rows\n          </button>\n        </div>\n        {this.state.showGenerateRowsModal && (\n          <GenerateRows\n            hideGenerateRowsModal={this.hideGenerateRowsModal}\n            onGenerateRows={this.onGenerateRows}\n            onUpdateState={this.props.onUpdateState}\n          />\n        )}\n        {this.state.rows.length > 0 && (\n          <div className='right-table-controls'>\n            <button\n              className='right'\n              onClick={this.removeRows}\n            >Remove rows</button>\n          </div>\n        )}\n        <p className='total'>\n          <span>Total: </span>\n          <span className='total-number'>${this.getTotal()}</span>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from 'react';\n\nimport './FromTo.css'\n\nclass FromTo extends React.PureComponent {\n\n  state = {\n    fromName: localStorage.getItem('fromName') || 'Your name',\n    fromAddress: localStorage.getItem('fromAddress') || '123 Street, City, State, Country, Zip Code',\n    fromTelephone: localStorage.getItem('fromTelephone') || '(+1) 123 123 1234',\n    fromEmail: localStorage.getItem('fromEmail') || 'your.mail@gmail.com',\n    toName: localStorage.getItem('toName') || 'Company name',\n    toAddress: localStorage.getItem('toAddress') || '123 Street, City, State, Country, Zip Code',\n    toTelephone: localStorage.getItem('toTelephone') || '(+1) 123 123 1234',\n    toEmail: localStorage.getItem('toEmail') || 'company@gmail.com'\n  }\n\n  updateState = (key, event) => {\n    const value = event.target.textContent;\n    this.setState({[key]: value});\n    localStorage.setItem(key, value);\n    this.props.onUpdateState();\n  }\n\n  render() {\n    return (\n      <div className='from-to'>\n        <div className='from'>\n          <h3>From</h3>\n          <p\n            className='name'\n            contentEditable\n            onBlur={(event) => this.updateState('fromName', event)}\n          >\n            {this.state.fromName}\n          </p>\n          <p\n            className='address'\n            contentEditable\n            onBlur={(event) => this.updateState('fromAddress', event)}\n          >\n            {this.state.fromAddress}\n          </p>\n          <p\n            className='telephone'\n            contentEditable\n            onBlur={(event) => this.updateState('fromTelephone', event)}\n          >\n            {this.state.fromTelephone}\n          </p>\n          <p\n            className='email'\n            contentEditable\n            onBlur={(event) => this.updateState('fromEmail', event)}\n          >\n            {this.state.fromEmail}\n          </p>\n        </div>\n        <div className='to'>\n          <h3>To</h3>\n          <p\n            className='name'\n            contentEditable\n            onBlur={(event) => this.updateState('toName', event)}\n          >\n            {this.state.toName}\n          </p>\n          <p\n            className='address'\n            contentEditable\n            onBlur={(event) => this.updateState('toAddress', event)}\n          >\n            {this.state.toAddress}\n          </p>\n          <p\n            className='telephone'\n            contentEditable\n            onBlur={(event) => this.updateState('toTelephone', event)}\n          >\n            {this.state.toTelephone}\n          </p>\n          <p\n            className='email'\n            contentEditable\n            onBlur={(event) => this.updateState('toEmail', event)}\n          >\n            {this.state.toEmail}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FromTo;\n","import React from 'react';\nimport moment from 'moment';\n\nimport './Invoice.css';\n\nclass Invoice extends React.PureComponent {\n\n  getInvoiceNumber = () => {\n    const value = localStorage.getItem('number') || 'INV-1';\n    document.title = `Invoice ${value}`;\n    return value;\n  }\n\n  state = {\n    date: localStorage.getItem('date') || moment().format('MMM D, YYYY'),\n    dueDate: localStorage.getItem('dueDate') || moment().format('MMM D, YYYY'),\n    number: this.getInvoiceNumber()\n  }\n\n  updateState = (key, value ) => {\n    this.setState({[key]: value});\n    localStorage.setItem(key, value);\n    this.props.onUpdateState();\n  }\n\n  updateNumber = (event) => {\n    const value = event.target.textContent;\n    this.updateState('number', value);\n    document.title = `Invoice ${value}`;\n  }\n\n  onChangeDate = (event) => {\n    const value = event.target.textContent;\n    this.updateState('date', value);\n  }\n\n  getDueDate = () => {\n    return moment(this.state.dueDate).format('MMM D, YYYY')\n  }\n\n  set30days = () => {\n    const date = moment().add(30, 'days').format('MMM D, YYYY');\n    this.updateState('dueDate', date);\n  }\n\n  updateDueDate = (event) => {\n    const value = event.target.textContent;\n    this.updateState('dueDate', value);\n  }\n\n  increaseInvoiceNumber = () => {\n    const text = this.state.number;\n    const number = text.replace(/\\D/g,'');\n    if (!Number.isNaN(+number)) {\n      const incrementedNumber = +number + 1;\n      const updatedText = text.replace(number, incrementedNumber);\n      this.updateState('number', updatedText);\n    }\n  }\n\n  render() {\n    return (\n      <div className='invoice'>\n        <p className='number'>\n          <div className='controls'>\n            <button\n              className='left'\n              onClick={this.increaseInvoiceNumber}\n            >Increase</button>\n          </div>\n          <span>Invoice #: </span>\n          <span\n            className='invoiceNumber'\n            contentEditable\n            onBlur={this.updateNumber}\n          >\n            {this.state.number}\n          </span>\n        </p>\n        <p className='date'>\n          <div className='controls'>\n            <button\n              className='left'\n              onClick={() => this.updateState('date', moment().format('MMM D, YYYY'))}\n            >Set today</button>\n          </div>\n            <span>Date: </span>\n            <span contentEditable onBlur={this.onChangeDate}>\n              {this.state.date}\n            </span>\n        </p>\n        <p className='due'>\n          <div className='controls'>\n            <button\n              className='left'\n              onClick={this.set30days}>Set 30 days</button>\n          </div>\n          <span>Due: </span>\n          <span\n            contentEditable\n            onBlur={this.updateDueDate}\n          >\n            {this.state.dueDate}\n          </span>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Invoice;\n","import React from 'react';\n\nimport Table from './Table';\nimport FromTo from './FromTo';\nimport Invoice from './Invoice';\n\nimport printer from './printer.svg';\nimport save from './save.svg';\n\nclass App extends React.PureComponent {\n\n  state = {\n    title: localStorage.getItem('title') || 'Invoice',\n    saved: 0\n  }\n\n  updateTitle = (event) => {\n    const title = event.target.textContent;\n    this.setState({title});\n    localStorage.setItem('title', title);\n    this.onUpdateState();\n  }\n\n  onUpdateState = () => {\n    this.setState({saved: 0})\n    setTimeout(() => {\n      this.setState({\n        saved: Date.now() + 2 * 1000\n      })\n      setTimeout(() => {\n        if (Date.now() > this.state.saved) {\n          this.setState({ saved: 0 })\n        }\n      }, 2500)\n    }, 300)\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='App'>\n          <div className='page'>\n            <h1\n              contentEditable\n              onBlur={this.updateTitle}\n            >\n              {this.state.title}\n            </h1>\n            <FromTo onUpdateState={this.onUpdateState} />\n            <Invoice onUpdateState={this.onUpdateState} />\n            <Table onUpdateState={this.onUpdateState} />\n          </div>\n          <img className='print' src={printer} onClick={() => window.print()} alt='print' />\n        </div>\n        {!!this.state.saved && (<img className='save' src={save} alt='save' />)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}