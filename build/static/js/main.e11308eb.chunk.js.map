{"version":3,"sources":["printer.svg","save.svg","GenerateRows.js","Table.js","FromTo.js","Invoice.js","App.js","index.js"],"names":["module","exports","GenerateRows","getTemplate","localStorage","getItem","getTime","getPrice","price","parseFloat","isNaN","getFrom","from","Date","now","getTo","to","getWeekends","state","template","time","weekends","canGenerateRows","moment","diff","generateRows","difference","rows","Array","map","nothing","index","day","add","name","format","replace","key","filter","row","props","onGenerateRows","hideGenerateRowsModal","updateFrom","date","setState","setItem","onUpdateState","updateTo","updateTemplate","event","target","value","templateStart","indexOf","templateEnd","slice","onUpdatePrice","changeWeekends","checked","updateDates","dates","selection","startDate","endDate","className","onClick","this","type","onChange","editableDateInputs","moveRangeOnFirstSelection","ranges","disabled","React","PureComponent","Table","getRowList","JSON","parse","err","console","error","showGenerateRowsModal","onChangeRowName","aKey","currentTarget","textContent","updateRows","onChangeRowPrice","getRows","contentEditable","onBlur","e","removeRow","addRow","getTotal","reduce","count","removeRows","toggleGenerateRowsModal","stringify","length","FromTo","fromName","fromAddress","fromTelephone","fromEmail","toName","toAddress","toTelephone","toEmail","updateState","Invoice","getInvoiceNumber","document","title","dueDate","number","updateNumber","onChangeDate","getDueDate","set30days","updateDueDate","increaseInvoiceNumber","text","Number","incrementedNumber","updatedText","App","saved","updateTitle","setTimeout","src","printer","window","print","alt","save","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.e11308eb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/printer.42497fb3.svg\";","module.exports = __webpack_public_path__ + \"static/media/save.1731195f.svg\";","import React from 'react';\nimport moment from 'moment';\nimport { DateRange } from 'react-date-range';\n\nimport 'react-date-range/dist/styles.css'; // main css file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\nimport './GenerateRows.css';\n\nclass GenerateRows extends React.PureComponent {\n\n  getTemplate = () => {\n    if (localStorage.getItem('template')) {\n      return localStorage.getItem('template');\n    }\n    return '{{MMM D, YYYY}} - Daily work';\n  }\n\n  getTime = () => {\n    if (localStorage.getItem('time')) {\n      return localStorage.getItem('time');\n    }\n    return '{{MMM D, YYYY}}';\n  }\n\n  getPrice = () => {\n    if (localStorage.getItem('price')) {\n      const price = parseFloat(localStorage.getItem('price'));\n      if (!isNaN(price)) {\n        return price;\n      }\n    }\n    return 100;\n  }\n\n  getFrom = () => {\n    if (localStorage.getItem('from')) {\n      const from = +localStorage.getItem('from');\n      if (!isNaN(from)) {\n        return from;\n      }\n    }\n    return Date.now();\n  }\n\n  getTo = () => {\n    if (localStorage.getItem('to')) {\n      const to = +localStorage.getItem('to');\n      if (!isNaN(to)) {\n        return to;\n      }\n    }\n    return Date.now();\n  }\n\n  getWeekends = () => {\n    if (localStorage.getItem('weekends')) {\n      return localStorage.getItem('template') === 'true';\n    }\n    return true;\n  }\n\n  state = {\n    template: this.getTemplate(),\n    time: this.getTime(),\n    price: this.getPrice(),\n    from: this.getFrom(),\n    to: this.getTo(),\n    weekends: this.getWeekends()\n  }\n\n  canGenerateRows = () => {\n    const from = moment(this.state.from);\n    const to = moment(this.state.to);\n    const difference = to.diff(from, 'days');\n    return difference > 0;\n  }\n\n  generateRows = () => {\n    const from = moment(this.state.from);\n    const to = moment(this.state.to);\n    const difference = to.diff(from, 'days') + 1;\n    if (difference > 0) {\n      // eslint-disable-next-line\n      const rows = [...(new Array(difference))].map((nothing, index) => {\n        const day = moment(from).add(index, 'day');\n        if (!this.state.weekends || (this.state.weekends && day.day() >= 1 && day.day() <= 5)) {\n          let time = '';\n          let name = this.state.template;\n          if (this.state.time) {\n            time = day.format(this.state.time.replace('{{', '').replace('}}', ''));\n            name = this.state.template.replace(this.state.time, time);\n          }\n          return {\n            name,\n            price: this.state.price,\n            key: day.format('X')\n          }\n        }\n      }).filter(row => row);\n      this.props.onGenerateRows(rows);\n      this.props.hideGenerateRowsModal();\n    }\n  }\n\n  updateFrom = (date) => {\n    const from = date.getTime();\n    this.setState({from});\n    localStorage.setItem('from', from);\n    this.props.onUpdateState();\n  }\n\n  updateTo = (date) => {\n    const to = date.getTime()\n    this.setState({to});\n    localStorage.setItem('to', to);\n    this.props.onUpdateState();\n  }\n\n  updateTemplate = (event) => {\n    const template = event.target.value\n    const templateStart = template.indexOf('{{');\n    const templateEnd = template.indexOf('}}');\n    let time = '';\n    if (templateStart >= 0 && templateStart < templateEnd) {\n      time = template.slice(templateStart, templateEnd + 2);\n    }\n    this.setState({ template, time });\n    localStorage.setItem('template', template);\n    localStorage.setItem('time', time);\n    this.props.onUpdateState();\n  }\n\n  onUpdatePrice = (event) => {\n    const price = parseFloat(event.target.value);\n    this.setState({price});\n    localStorage.setItem('price', price);\n    this.props.onUpdateState();\n  }\n\n  changeWeekends = (event) => {\n    const weekends = event.target.checked;\n    this.setState({weekends});\n    localStorage.setItem('weekends', weekends);\n    this.props.onUpdateState();\n  }\n\n  updateDates = (dates) => {\n    this.updateFrom(dates.selection.startDate);\n    this.updateTo(dates.selection.endDate);\n  }\n\n  render() {\n    return (\n      <div>\n        <div\n          className='generate-rows-outside'\n          onClick={this.props.hideGenerateRowsModal}\n        ></div>\n        <div className='generate-rows'>\n          <label>\n            <span>Template</span>\n            <input\n              type='text'\n              value={this.state.template}\n              onChange={this.updateTemplate}\n            />\n          </label>\n          <label>\n            <span>Amount</span>\n            <input\n              type='number'\n              value={this.state.price}\n              onChange={this.onUpdatePrice}\n            />\n          </label>\n          <DateRange\n            editableDateInputs\n            onChange={this.updateDates}\n            moveRangeOnFirstSelection={false}\n            ranges={[{\n              startDate: new Date(this.state.from),\n              endDate: new Date(this.state.to),\n              key: 'selection'\n            }]}\n          />\n          <label className='weekend'>\n            <span>\n              <input\n                type='checkbox'\n                checked={this.state.weekends}\n                onChange={this.changeWeekends}\n              />\n            </span>\n            Exclude weekends\n          </label>\n          <p>\n            <button\n              onClick={this.generateRows}\n              disabled={!this.canGenerateRows()}\n            >\n              Generate\n            </button>\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default GenerateRows;\n","import React from 'react';\nimport GenerateRows from './GenerateRows';\n\nimport './Table.css';\n\nclass Table extends React.PureComponent {\n\n  getRowList = () => {\n    const rows = localStorage.getItem('rows');\n    if (rows) {\n      try {\n        return JSON.parse(rows);\n      } catch (err) {\n        console.error(err);\n        return [];\n      }\n    }\n    return [];\n  }\n\n  state = {\n    rows: this.getRowList(),\n    showGenerateRowsModal: false\n  }\n\n  onChangeRowName = (event, aKey) => {\n    const rows = this.state.rows.map((row) => {\n      if (row.key === aKey) {\n        return {\n          ...row,\n          name: event.currentTarget.textContent\n        }\n      }\n      return row;\n    });\n    this.updateRows(rows);\n  }\n\n  onChangeRowPrice = (event, aKey) => {\n    const rows = this.state.rows.map((row) => {\n      if (row.key === aKey) {\n        return {\n          ...row,\n          price: parseFloat(event.currentTarget.textContent)\n        }\n      }\n      return row;\n    });\n    this.updateRows(rows);\n  }\n\n  getRows = () => {\n    return this.state.rows.map((row) => {\n      return (\n        <tr className={row.key}>\n          <td>\n            <span\n              contentEditable\n              onBlur={(e) => this.onChangeRowName(e, row.key)}\n            >{row.name}</span>\n            <div className='controls'>\n              <button\n                className='right'\n                onClick={() => this.removeRow(row.key)}>x</button>\n            </div>\n          </td>\n          <td>\n            $\n            <span\n              contentEditable\n              onBlur={(e) => this.onChangeRowPrice(e, row.key)}\n            >\n              {row.price}  \n            </span>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  addRow = () => {\n    const rows = [\n      ...this.state.rows,\n      {\n        name: 'Daily work',\n        price: 20,\n        key: Date.now()\n      }\n    ]\n    this.updateRows(rows);\n  }\n\n  getTotal = () => {\n    return this.state.rows.reduce((count, {price}) => count + price, 0);\n  }\n\n  removeRow = (aKey) => {\n    const rows = this.state.rows.filter(({key}) => aKey !== key);\n    this.updateRows(rows);\n  }\n\n  removeRows = () => {\n    this.updateRows([]);\n  }\n\n  toggleGenerateRowsModal = () => {\n    this.setState({\n      showGenerateRowsModal: !this.state.showGenerateRowsModal\n    });\n  }\n\n  hideGenerateRowsModal = () => {\n    this.setState({\n      showGenerateRowsModal: false\n    });\n  }\n\n  onGenerateRows = (rows) => {\n    this.updateRows([\n      ...this.state.rows,\n      ...rows\n    ]);\n  }\n\n  updateRows = (rows) => {\n    this.setState({ rows });\n    localStorage.setItem('rows', JSON.stringify(rows));\n    this.props.onUpdateState();\n  }\n\n  render() {\n    return (\n      <div>\n        <table>\n          <thead>\n            <tr>\n              <th>Description</th>\n              <th>Amount</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.getRows()}\n          </tbody>\n        </table>\n        <div className='add-row-table-controls'>\n          <button\n            className='left'\n            onClick={this.addRow}>Add row</button>\n        </div>\n        <div className='generate-rows-table-controls'>\n          <button\n            className='left'\n            onClick={this.toggleGenerateRowsModal}\n          >\n            Generate rows\n          </button>\n        </div>\n        {this.state.showGenerateRowsModal && (\n          <GenerateRows\n            hideGenerateRowsModal={this.hideGenerateRowsModal}\n            onGenerateRows={this.onGenerateRows}\n            onUpdateState={this.props.onUpdateState}\n          />\n        )}\n        {this.state.rows.length > 0 && (\n          <div className='right-table-controls'>\n            <button\n              className='right'\n              onClick={this.removeRows}\n            >Remove rows</button>\n          </div>\n        )}\n        <p className='total'>\n          <span>Total: </span>\n          <span className='total-number'>${this.getTotal()}</span>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Table;\n","import React from 'react';\n\nimport './FromTo.css'\n\nclass FromTo extends React.PureComponent {\n\n  state = {\n    fromName: localStorage.getItem('fromName') || 'Your name',\n    fromAddress: localStorage.getItem('fromAddress') || '123 Street, City, State, Country, Zip Code',\n    fromTelephone: localStorage.getItem('fromTelephone') || '(+1) 123 123 1234',\n    fromEmail: localStorage.getItem('fromEmail') || 'your.mail@gmail.com',\n    toName: localStorage.getItem('toName') || 'Company name',\n    toAddress: localStorage.getItem('toAddress') || '123 Street, City, State, Country, Zip Code',\n    toTelephone: localStorage.getItem('toTelephone') || '(+1) 123 123 1234',\n    toEmail: localStorage.getItem('toEmail') || 'company@gmail.com'\n  }\n\n  updateState = (key, event) => {\n    const value = event.target.textContent;\n    this.setState({[key]: value});\n    localStorage.setItem(key, value);\n    this.props.onUpdateState();\n  }\n\n  render() {\n    return (\n      <div className='from-to'>\n        <div className='from'>\n          <h3>From</h3>\n          <p\n            className='name'\n            contentEditable\n            onBlur={(event) => this.updateState('fromName', event)}\n          >\n            {this.state.fromName}\n          </p>\n          <p\n            className='address'\n            contentEditable\n            onBlur={(event) => this.updateState('fromAddress', event)}\n          >\n            {this.state.fromAddress}\n          </p>\n          <p\n            className='telephone'\n            contentEditable\n            onBlur={(event) => this.updateState('fromTelephone', event)}\n          >\n            {this.state.fromTelephone}\n          </p>\n          <p\n            className='email'\n            contentEditable\n            onBlur={(event) => this.updateState('fromEmail', event)}\n          >\n            {this.state.fromEmail}\n          </p>\n        </div>\n        <div className='to'>\n          <h3>To</h3>\n          <p\n            className='name'\n            contentEditable\n            onBlur={(event) => this.updateState('toName', event)}\n          >\n            {this.state.toName}\n          </p>\n          <p\n            className='address'\n            contentEditable\n            onBlur={(event) => this.updateState('toAddress', event)}\n          >\n            {this.state.toAddress}\n          </p>\n          <p\n            className='telephone'\n            contentEditable\n            onBlur={(event) => this.updateState('toTelephone', event)}\n          >\n            {this.state.toTelephone}\n          </p>\n          <p\n            className='email'\n            contentEditable\n            onBlur={(event) => this.updateState('toEmail', event)}\n          >\n            {this.state.toEmail}\n          </p>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default FromTo;\n","import React from 'react';\nimport moment from 'moment';\n\nimport './Invoice.css';\n\nclass Invoice extends React.PureComponent {\n\n  getInvoiceNumber = () => {\n    const value = localStorage.getItem('number') || 'INV-1';\n    document.title = `Invoice ${value}`;\n    return value;\n  }\n\n  state = {\n    date: localStorage.getItem('date') || moment().format('MMM D, YYYY'),\n    dueDate: localStorage.getItem('dueDate') || moment().format('MMM D, YYYY'),\n    number: this.getInvoiceNumber()\n  }\n\n  updateState = (key, value ) => {\n    this.setState({[key]: value});\n    localStorage.setItem(key, value);\n    this.props.onUpdateState();\n  }\n\n  updateNumber = (event) => {\n    const value = event.target.textContent;\n    this.updateState('number', value);\n    document.title = `Invoice ${value}`;\n  }\n\n  onChangeDate = (event) => {\n    const value = event.target.textContent;\n    this.updateState('date', value);\n  }\n\n  getDueDate = () => {\n    return moment(this.state.dueDate).format('MMM D, YYYY')\n  }\n\n  set30days = () => {\n    const date = moment().add(30, 'days').format('MMM D, YYYY');\n    this.updateState('dueDate', date);\n  }\n\n  updateDueDate = (event) => {\n    const value = event.target.textContent;\n    this.updateState('dueDate', value);\n  }\n\n  increaseInvoiceNumber = () => {\n    const text = this.state.number;\n    const number = text.replace(/\\D/g,'');\n    if (!Number.isNaN(+number)) {\n      const incrementedNumber = +number + 1;\n      const updatedText = text.replace(number, incrementedNumber);\n      this.updateState('number', updatedText);\n    }\n  }\n\n  render() {\n    return (\n      <div className='invoice'>\n        <p className='number'>\n          <div className='controls'>\n            <button\n              className='left'\n              onClick={this.increaseInvoiceNumber}\n            >Increase</button>\n          </div>\n          <span>Invoice #: </span>\n          <span\n            className='invoiceNumber'\n            contentEditable\n            onBlur={this.updateNumber}\n          >\n            {this.state.number}\n          </span>\n        </p>\n        <p className='date'>\n          <div className='controls'>\n            <button\n              className='left'\n              onClick={() => this.updateState('date', moment().format('MMM D, YYYY'))}\n            >Set today</button>\n          </div>\n            <span>Date: </span>\n            <span contentEditable onBlur={this.onChangeDate}>\n              {this.state.date}\n            </span>\n        </p>\n        <p className='due'>\n          <div className='controls'>\n            <button\n              className='left'\n              onClick={this.set30days}>Set 30 days</button>\n          </div>\n          <span>Due: </span>\n          <span\n            contentEditable\n            onBlur={this.updateDueDate}\n          >\n            {this.state.dueDate}\n          </span>\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default Invoice;\n","import React from 'react';\n\nimport Table from './Table';\nimport FromTo from './FromTo';\nimport Invoice from './Invoice';\n\nimport printer from './printer.svg';\nimport save from './save.svg';\n\nclass App extends React.PureComponent {\n\n  state = {\n    title: localStorage.getItem('title') || 'Invoice',\n    saved: 0\n  }\n\n  updateTitle = (event) => {\n    const title = event.target.textContent;\n    this.setState({title});\n    localStorage.setItem('title', title);\n    this.onUpdateState();\n  }\n\n  onUpdateState = () => {\n    this.setState({saved: 0})\n    setTimeout(() => {\n      this.setState({\n        saved: Date.now() + 2 * 1000\n      })\n      setTimeout(() => {\n        if (Date.now() > this.state.saved) {\n          this.setState({ saved: 0 })\n        }\n      }, 2500)\n    }, 300)\n  }\n\n  render() {\n    return (\n      <div>\n        <div className='App'>\n          <div className='page'>\n            <h1\n              contentEditable\n              onBlur={this.updateTitle}\n            >\n              {this.state.title}\n            </h1>\n            <FromTo onUpdateState={this.onUpdateState} />\n            <Invoice onUpdateState={this.onUpdateState} />\n            <Table onUpdateState={this.onUpdateState} />\n          </div>\n          <img className='print' src={printer} onClick={() => window.print()} alt='print' />\n        </div>\n        {!!this.state.saved && (<img className='save' src={save} alt='save' />)}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}